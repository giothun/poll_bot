"""
Cyprus Camp Feedback Templates

–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è Cyprus –∫—ç–º–ø–∞ —Å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
"""

from models import EventType
from typing import Dict, List


class FeedbackOption:
    """–û–ø—Ü–∏—è feedback —Å emoji –∏ —Ç–µ–∫—Å—Ç–æ–º."""
    def __init__(self, emoji: str, text: str):
        self.emoji = emoji
        self.text = text
    
    def format(self) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–ø—Ü–∏—é –¥–ª—è Discord poll."""
        return f"{self.emoji} {self.text}"


# Cyprus Camp Feedback Templates
CYPRUS_FEEDBACK_TEMPLATES: Dict[EventType, List[FeedbackOption]] = {
    EventType.CONTEST: [
        FeedbackOption("ü©∑", "Wow, I loved it!"),
        FeedbackOption("üòø", "It was too hard"),
        FeedbackOption("ü•±", "It was too easy"),
        FeedbackOption("üòë", "It was OK"),
        FeedbackOption("üòï", "I didn‚Äôt like it"),
    ],
    
    EventType.CONTEST_EDITORIAL: [
        FeedbackOption("üòª", "It was super useful!"),
        FeedbackOption("üÜó", "I haven't got everything knew smth before, but still enjoyed it!"),
        FeedbackOption("üòë", "It could be better"),
        FeedbackOption("üèÉ‚Äç‚ôÄÔ∏è‚Äç‚û°Ô∏è", "I didn't attend the editorial")
    ],
    
    EventType.EXTRA_LECTURE: [
        FeedbackOption("ü§©", "Cool ‚Äì It was informative and useful"),
        FeedbackOption("üëç", "Okay ‚Äì It was interesting but not so relevant"),
        FeedbackOption("üòû", "Meh ‚Äì It could have been better"),
        FeedbackOption("üõë", "I didn't participate")
    ],
    
    EventType.EVENING_ACTIVITY: [
        FeedbackOption("‚ù§Ô∏è‚Äçüî•", "Cool ‚Äì I want more like it"),
        FeedbackOption("üòÉ", "Okay ‚Äì It was fun"),
        FeedbackOption("üòï", "Meh ‚Äì I could do something better"),
        FeedbackOption("üôà", "I didn't participate")
    ]
}


def get_cyprus_feedback_options(event_type: EventType) -> List[FeedbackOption]:
    """
    –ü–æ–ª—É—á–∏—Ç—å Cyprus feedback –æ–ø—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è.
    
    Args:
        event_type: –¢–∏–ø —Å–æ–±—ã—Ç–∏—è
        
    Returns:
        –°–ø–∏—Å–æ–∫ FeedbackOption –∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    """
    return CYPRUS_FEEDBACK_TEMPLATES.get(event_type, [])


def is_cyprus_supported_event(event_type: EventType) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –≤ Cyprus —Ä–µ–∂–∏–º–µ.
    
    Args:
        event_type: –¢–∏–ø —Å–æ–±—ã—Ç–∏—è
        
    Returns:
        True –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, False –∏–Ω–∞—á–µ
    """
    return event_type in CYPRUS_FEEDBACK_TEMPLATES


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cyprus –∫—ç–º–ø–∞
CYPRUS_CAMP_CONFIG = {
    "timezone": "Europe/Nicosia",  # UTC+3
    "feedback_time": "23:00",
    "attendance_polls_enabled": False,
    "reminders_enabled": False,
    "feedback_polls_enabled": True,
    "poll_close_enabled": False,  # Feedback polls –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    "single_choice_polls": True,  # –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω
}


def get_cyprus_config() -> Dict[str, any]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Cyprus –∫—ç–º–ø–∞."""
    return CYPRUS_CAMP_CONFIG.copy()

